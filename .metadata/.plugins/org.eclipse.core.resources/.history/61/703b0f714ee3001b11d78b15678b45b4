import java.util.function.Function;
import java.util.function.Predicate;

public class FunctionalInterfaces {

	public static void main(String[] args) {
		
//		Calc c = new Calc();
//		c.calculate(2)

		Square s = (int input) -> {
			return input * input;
		};
		
		int result = s.calculate(9);
		System.out.println(result);
		
		//Built-in Functional Interfaces
		
		//Predicate
		//Binary Operator
		//Function
		
		Predicate<String> check = (str) -> { return str.startsWith("Mr.");};
		
		boolean result2 = check.test("Mr.President");
		
		
		Function<Manager> m = (User u)->{ return new Manager();};
	}
	
}

class User {
	
}

class Manager {
	
}

//class Calc implements Square {
//
//	@Override
//	public int calculate(int input) {
//		return input * input;
//	}
//	
//}

interface Square {
	int calculate(int input);
}
